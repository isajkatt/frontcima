{"code":"!function(e){var o={};function n(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=o,n.d=function(e,o,t){n.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,o){if(1&o&&(e=n(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)n.d(t,r,function(o){return e[o]}.bind(null,r));return t},n.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(o,\"a\",o),o},n.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},n.p=\"\",n(n.s=0)}([function(e,o){throw new Error('Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nError: [BABEL] C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\src\\\\app.js: \\nAs of v7.0.0-beta.55, we\\'ve removed Babel\\'s Stage presets.\\nPlease consider reading our blog post on this decision at\\nhttps://babeljs.io/blog/2018/07/27/removing-babels-stage-presets\\nfor more details. TL;DR is that it\\'s more beneficial in the\\n  long run to explicitly add which proposals to use.\\n\\nFor a more automatic migration, we have updated babel-upgrade,\\nhttps://github.com/babel/babel-upgrade to do this for you with\\n\"npx babel-upgrade\".\\n\\nIf you want the same configuration as before:\\n\\n{\\n  \"plugins\": [\\n    \"@babel/plugin-syntax-dynamic-import\",\\n    \"@babel/plugin-syntax-import-meta\",\\n    [\"@babel/plugin-proposal-class-properties\", { \"loose\": false }],\\n    \"@babel/plugin-proposal-json-strings\"\\n  ]\\n}\\n\\n\\nIf you\\'re using the same configuration across many separate projects,\\nkeep in mind that you can also create your own custom presets with\\nwhichever plugins and presets you\\'re looking to use.\\n\\nmodule.exports = function() {\\n  return {\\n    plugins: [\\n      require(\"@babel/plugin-syntax-dynamic-import\"),\\n      [require(\"@babel/plugin-proposal-decorators\"), { \"legacy\": true }],\\n      [require(\"@babel/plugin-proposal-class-properties\"), { \"loose\": false }],\\n    ],\\n    presets: [\\n      // ...\\n    ],\\n  };\\n};\\n (While processing: \"C:\\\\\\\\Users\\\\\\\\Azamat Ismagulov\\\\\\\\Desktop\\\\\\\\web\\\\\\\\frontcima\\\\\\\\node_modules\\\\\\\\@babel\\\\\\\\preset-stage-3\\\\\\\\lib\\\\\\\\index.js\")\\n    at _default (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\preset-stage-3\\\\lib\\\\index.js:9:9)\\n    at loadDescriptor (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\config\\\\full.js:165:14)\\n    at cachedFunction (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\config\\\\caching.js:33:19)\\n    at loadPresetDescriptor (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\config\\\\full.js:235:63)\\n    at config.presets.reduce (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\config\\\\full.js:77:21)\\n    at Array.reduce (<anonymous>)\\n    at recurseDescriptors (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\config\\\\full.js:74:38)\\n    at loadFullConfig (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\config\\\\full.js:108:6)\\n    at process.nextTick (C:\\\\Users\\\\Azamat Ismagulov\\\\Desktop\\\\web\\\\frontcima\\\\node_modules\\\\@babel\\\\core\\\\lib\\\\transform.js:28:33)\\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\\n    at process._tickCallback (internal/process/next_tick.js:180:9)')}]);","extractedComments":[]}